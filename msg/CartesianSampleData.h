/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: /home/rafi/cyclonedds/helloworld/CartesianSampleData.h
  Source: /home/rafi/cyclonedds/share/CycloneDDS/examples/helloworld/CartesianSampleData.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC__HOME_RAFI_CYCLONEDDS_HELLOWORLD_CARTESIANSAMPLEDATA_H_E4FFCDCC247A69FE44B8B51AA2FEBC07
#define DDSC__HOME_RAFI_CYCLONEDDS_HELLOWORLD_CARTESIANSAMPLEDATA_H_E4FFCDCC247A69FE44B8B51AA2FEBC07

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

typedef struct custom_trajectory_msgs_msg_CartesianSampleData
{
  dds_sequence_double x;
  dds_sequence_double y;
  dds_sequence_double theta;
  dds_sequence_double velocity;
  dds_sequence_double acceleration;
  dds_sequence_double kappa;
  dds_sequence_double kappa_dot;
} custom_trajectory_msgs_msg_CartesianSampleData;

extern const dds_topic_descriptor_t custom_trajectory_msgs_msg_CartesianSampleData_desc;

#define custom_trajectory_msgs_msg_CartesianSampleData__alloc() \
((custom_trajectory_msgs_msg_CartesianSampleData*) dds_alloc (sizeof (custom_trajectory_msgs_msg_CartesianSampleData)));

#define custom_trajectory_msgs_msg_CartesianSampleData_free(d,o) \
dds_sample_free ((d), &custom_trajectory_msgs_msg_CartesianSampleData_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC__HOME_RAFI_CYCLONEDDS_HELLOWORLD_CARTESIANSAMPLEDATA_H_E4FFCDCC247A69FE44B8B51AA2FEBC07 */
