/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: /home/rafi/cyclonedds/helloworld/CurvilinearSampleData.h
  Source: /home/rafi/cyclonedds/share/CycloneDDS/examples/helloworld/CurvilinearSampleData.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC__HOME_RAFI_CYCLONEDDS_HELLOWORLD_CURVILINEARSAMPLEDATA_H_EA1273A0550798E797AE73F587F32F6A
#define DDSC__HOME_RAFI_CYCLONEDDS_HELLOWORLD_CURVILINEARSAMPLEDATA_H_EA1273A0550798E797AE73F587F32F6A

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

typedef struct custom_trajectory_msgs_msg_CurvilinearSampleData
{
  dds_sequence_double s;
  dds_sequence_double d;
  dds_sequence_double theta;
  dds_sequence_double dd;
  dds_sequence_double ddd;
  dds_sequence_double ss;
  dds_sequence_double sss;
} custom_trajectory_msgs_msg_CurvilinearSampleData;

extern const dds_topic_descriptor_t custom_trajectory_msgs_msg_CurvilinearSampleData_desc;

#define custom_trajectory_msgs_msg_CurvilinearSampleData__alloc() \
((custom_trajectory_msgs_msg_CurvilinearSampleData*) dds_alloc (sizeof (custom_trajectory_msgs_msg_CurvilinearSampleData)));

#define custom_trajectory_msgs_msg_CurvilinearSampleData_free(d,o) \
dds_sample_free ((d), &custom_trajectory_msgs_msg_CurvilinearSampleData_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC__HOME_RAFI_CYCLONEDDS_HELLOWORLD_CURVILINEARSAMPLEDATA_H_EA1273A0550798E797AE73F587F32F6A */
