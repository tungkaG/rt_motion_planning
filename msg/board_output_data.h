/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: /home/glenn/cyclonedds/examples/helloworld/build/board_output_data.h
  Source: /home/glenn/cyclonedds/examples/helloworld/board_output_data.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC__HOME_GLENN_CYCLONEDDS_EXAMPLES_HELLOWORLD_BUILD_BOARD_OUTPUT_DATA_H
#define DDSC__HOME_GLENN_CYCLONEDDS_EXAMPLES_HELLOWORLD_BUILD_BOARD_OUTPUT_DATA_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

typedef struct board_output_data_msg
{
  dds_sequence_double x;
  dds_sequence_double y;
  bool feasibility;
  double cost;
} board_output_data_msg;

extern const dds_topic_descriptor_t board_output_data_msg_desc;

#define board_output_data_msg__alloc() \
((board_output_data_msg*) dds_alloc (sizeof (board_output_data_msg)));

#define board_output_data_msg_free(d,o) \
dds_sample_free ((d), &board_output_data_msg_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC__HOME_GLENN_CYCLONEDDS_EXAMPLES_HELLOWORLD_BUILD_BOARD_OUTPUT_DATA_H */
